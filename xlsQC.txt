# R-script to automatedly plot the bionominal output of Deep Seq data
# Change the variables between the ####### to make the script run correctly

# source("http://bioconductor.org/biocLite.R")
# BiocLite()
# source("http://www.bioconductor.org/biocLite.R"); biocLite("VariantAnnotation")
# biocLite(c("GenomicFeatures", "AnnotationDbi"))
# install.packages("calibrate")
# install.packages("XLConnect") 
# install.packages("rJava")

library("VariantAnnotation")
library("IRanges")
library("GenomicRanges")
library(foreign)
library(lattice)
library(XLConnect)
require(Heatplus)
library(limma)
library(calibrate)


basedir <- "C:/Users/dyap_000/Documents/R"
dirname <- paste(basedir, "BioNom_QC", sep="/")

setwd(dirname)
# This is where the output of this R-script will be
outpath <- dirname

SA="SA494_target"


#File names matching a pattern
pat1=paste("*",SA,sep="")
pat=paste(pat1, "*.*xls", sep="_")
file_names=list.files(pattern=pat)
file_names
#########################################################################


############# DO NOT CHANGE ANYTHING BELOW THIS LINE #################

file = file_names[1]

#Load workbook one by one
wb <- loadWorkbook ( file , create = FALSE )

#Load the second worksheet which is variant allelic freq
sheets <- c(getSheets(wb)[2],getSheets(wb)[1])
sheets

dflist <- readWorksheet(wb, sheet = sheets, header = TRUE, startRow = c(1,1), startCol = c(1,1), endCol = c(49,49), endRow = c(289,289))

########################################################
# dflist[1] is the reads (depth)
# Col 1 is the ID, the data starts from col 2
# ef <- data.matrix(dflist[[1]][2:ncol(dflist[[1]])])
ef <- data.matrix(dflist[[1]][3:ncol(dflist[[1]])])

# Put the ID back as rownames
rownames(ef) <- dflist[[2]]$target

# Selecting only those position with at least 100 reads in the normal
# Normal sample
sample=colnames(ef)[1]
ff <- ef[ef[, sample] > 1000,]
gf <- ff[complete.cases(ff),]
# fails in all 4 samples
filt <-rownames(ef[rowSums(is.na(ef))==4,])

reads=paste(SA,"reads.csv",sep="-")
write.csv(gf, file=reads)

ramp <- colorRamp(c("dark green", "red"))
readpdf=paste(SA,"reads.pdf",sep="-")
pdf(readpdf, width=6, height=6)
title=paste(SA, "reads", sep=" ")
#levelplot(ef, cex.axis=0.8, col.regions = c(rgb(50:0/50, 0, 0),rgb(0,0:50/50,0) ), xlab="SNV positions", ylab="Samples", main=title, aspect="fill", cuts=1000, colorkey=TRUE)
levelplot(ef, cex.axis=0.8, col.regions=rgb(ramp(seq(0, 1, length = 1000)), max = 255), xlab="SNV positions", ylab="Samples", main=title, aspect="fill", cuts=1000, colorkey=TRUE)
dev.off()

pdf=paste(SA,"boxplot_Reads.pdf",sep="-")
pdf(pdf, width=6, height=6)
title=paste(SA, "read comparison", sep=" ")
boxplot(gf, main="Comparison of Reads", ylab="Reads", aspect="fill")
dev.off()

readpdf=paste(SA,"Corrplot_Reads.pdf",sep="-")
pdf(readpdf, width=6, height=6)
title=paste(SA, "read comparison", sep=" ")
plot(gf[,2],gf[,3], ylab=colnames(gf)[3], xlab=colnames(gf)[2], main="Read Correlation")
dev.off()


##########################################################
# dflist[2] is the allele Freq sheet
# Col 1 is the ID, the data starts from col 2
# jf <- data.matrix(dflist[[2]][2:ncol(dflist[[2]])])
jf <- data.matrix(dflist[[2]][3:ncol(dflist[[2]])])

# Put the ID back as rownames
rownames(jf) <- dflist[[1]]$target

# Selecting only those position with at least 100 reads in the normal
ff <- jf[jf[, sample] > 0.2,]
kf <- jf[complete.cases(jf),]

freq=paste(SA,"freq.csv",sep="-")
write.csv(kf, file=freq)

freq=paste(SA,"allfreq.csv",sep="-")
write.csv(ef, file=freq)

hmcols<-colorRampPalette(c("dark green","red"))(1000)
freqpdf=paste(SA,"freq.pdf",sep="-")
pdf(freqpdf, width=6, height=6)
title=paste(SA, "Alt. Allele Freq", sep=" ")
levelplot(kf, cex.axis=0.8, col.regions = hmcols, xlab="SNV positions", ylab="Samples", main=title, aspect="fill", cuts=1000)

dev.off()
freqpdf=paste(SA,"boxplot_Freq.pdf",sep="-")
pdf(freqpdf, width=6, height=6)
title=paste(SA, "read comparison", sep=" ")
boxplot(ef, main="Comparison of Allele Freq", ylab="Freq", aspect="fill")
dev.off()

freqpdf=paste(SA,"Corrplot_Freq.pdf",sep="-")
pdf(freqpdf, width=6, height=6)
title=paste(SA, "Correlation of Freq", sep=" ")
plot(gf[,2],gf[,3], ylab=colnames(gf)[3], xlab=colnames(gf)[2], main="Allele Prev Correlation")
filt<-rownames(jf[rowSums(is.na(jf))==1,])
	# This section prints out the wells that failed (missing data or no data)
	createCounter <- function(value) { function(i) { value <<- value+i} }
	counter <- createCounter(0)
	
		text(0.4,0.9, "Positions with missing data in at least one sample")
		for (i in 1:length(filt)) {x <- counter(0.6/length(filt)); text(x, 0.8, filt[i], cex=0.5); print(x)}
		text(0.3,0.7, "(ie 2.5% drop out)")
		text(0.6,0.1, "161 out of 288 positions have reads in at least one (Xeno) sample", cex=0.5)
	# This labels every other point on the plot for QC purposes
	# textxy(jf[,2], jf[,3], filt, cx=0.8, m=c(mean(jf[,2]),mean(jf[,3])))

dev.off()


#####################################################################################################

